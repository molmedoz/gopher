name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

# Prevent multiple releases from running simultaneously
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false  # Don't cancel releases

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get tag name
        id: tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Validate tag format
        run: |
          TAG="${{ steps.tag.outputs.TAG }}"
          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?$ ]]; then
            echo "❌ Invalid tag format: $TAG"
            exit 1
          fi
          echo "✅ Tag format valid: $TAG"

      - name: Run tests
        run: go test ./... -v

  goreleaser:
    name: Release with GoReleaser
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Run tests
        run: |
          go test ./... -v
          go test ./... -race

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dist
          path: dist/
